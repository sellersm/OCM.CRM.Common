<QueryViewSpec
	xmlns="bb_appfx_queryview"
	xmlns:common="bb_appfx_commontypes" 
	ID="6f1de470-9b22-48ba-a040-90bb158de83a"
	Name="Rate Increase Summary Stats Query"
	Description="Used to create Summary Stats for the Rate Increase in 2014"
	Author="Cary Mayeda"
	IsRoot="true"
	PrimaryKeyField="SEGMENT"
	RecordType="Report"
	common:SecurityUIFolder="Rate Increase"
	>
	<!-- 
	Remarks:    

	History:
	Date            Modified By     Comments
	27-Apr-2014		CMayeda			Initial Version
	08-May-2014		CMayeda			Added Never Increase and Reversal responses
	09-May-2014		CMayeda			Added percentages
	-->

	<!-- define the view used to return data for the query -->
	<ViewImplementation ViewName="USR_V_QUERY_RATEINCREASE_SUMMARYSTATS">
		<ViewSQL>
			<![CDATA[

with RateIncreaseSegmentResponses as
(
select 
	MKTSEGMENT.NAME as SEGMENTNAME, 
	MKTSEGMENT.DESCRIPTION as SEGMENTDESC,
	MKTSEGMENTCATEGORYCODE.DESCRIPTION as SEGMENTCATEGORY,
	MKTPACKAGE.NAME as PACKAGENAME,
	case 
		when RESPONSE.RESPONSE is null then 'Did not respond'
		else RESPONSE.RESPONSE 
	end as RESPONSE,
	srs.INCREASERATE,
	srs.ORIGINALSPONSORSHIPGIFTAMOUNT,
	srs.UPDATEDSPONSORSHIPGIFTAMOUNT,
	srs.REVENUELOOKUPID,
	ca.ID as CONSTITUENTID

from 
	dbo.MKTSEGMENTATIONSEGMENT
    inner join dbo.MKTSEGMENTATION ON MKTSEGMENTATION.ID = MKTSEGMENTATIONSEGMENT.SEGMENTATIONID
	inner join dbo.MKTSEGMENT on MKTSEGMENT.ID = MKTSEGMENTATIONSEGMENT.SEGMENTID
	inner join dbo.MKTSEGMENTCATEGORYCODE on MKTSEGMENTCATEGORYCODE.ID = MKTSEGMENT.SEGMENTCATEGORYCODEID
    inner join dbo.CONSTITUENTAPPEAL ca on ca.MKTSEGMENTATIONSEGMENTID = MKTSEGMENTATIONSEGMENT.ID
    inner join dbo.MKTPACKAGE on MKTPACKAGE.ID = ca.MKTPACKAGEID
	inner join dbo.APPEAL a on a.ID = ca.APPEALID 
	left join dbo.USR_SPONSOR_RATECHANGE_SPONSORSHIPS srs on srs.SPONSORID = ca.CONSTITUENTID
	left join dbo.CONSTITUENTAPPEALRESPONSE ca_response on ca_response.CONSTITUENTAPPEALID = ca.ID 
	left join dbo.RESPONSE on ca_response.RESPONSEID = RESPONSE.ID
where 
	a.NAME like '%10555%'
)
--select * from RateIncreaseSegmentResponses where increaserate = 1 and response = 'No - Increase' 

, Responses as
(select 'No - Increase' as RESPONSE
 union
 select 'Partial - Increase' as RESPONSE
 union
 select 'Yes - Increase' as RESPONSE
 union
 select 'Never - Increase' as RESPONSE
 union
 select 'Partial - Reversal' as RESPONSE
 union
 select 'Reversal' as RESPONSE
 union
 select 'Did not respond' as RESPONSE
),
RateIncreaseSegments as
(
select distinct 
	risr.SEGMENTNAME, 
	risr.SEGMENTDESC,
	risr.SEGMENTCATEGORY,
	risr.PACKAGENAME,
	Responses.RESPONSE
from
	RateIncreaseSegmentResponses risr
cross apply Responses
),
RateIncreaseConstituentStats as
(
select 
	SEGMENTNAME, 
	SEGMENTDESC,
	SEGMENTCATEGORY,
	PACKAGENAME,
	RESPONSE,
	count(distinct CONSTITUENTID) as CONSTITUENTCOUNT
from 
	RateIncreaseSegmentResponses

group by 	
	SEGMENTNAME, 
	SEGMENTDESC,
	SEGMENTCATEGORY,
	PACKAGENAME,
	RESPONSE
),
RateIncreaseRevenueStats as
(
select 
	SEGMENTNAME, 
	SEGMENTDESC,
	SEGMENTCATEGORY,
	PACKAGENAME,
	RESPONSE,
	count(distinct REVENUELOOKUPID) as RGCOUNT
from 
	RateIncreaseSegmentResponses
where
	INCREASERATE = 1
	
group by 	
	SEGMENTNAME, 
	SEGMENTDESC,
	SEGMENTCATEGORY,
	PACKAGENAME,
	RESPONSE
),
Counts as
(
select 
	substring(ris.SEGMENTNAME, 25, 3) as SEGMENT,
	ris.SEGMENTNAME,
	ris.SEGMENTDESC,
	ris.SEGMENTCATEGORY,
	substring(ris.PACKAGENAME,22,25) as PACKAGETYPE, 
	ris.PACKAGENAME,
	ris.RESPONSE,
	case 
		when ric.CONSTITUENTCOUNT is null then 0
		else ric.CONSTITUENTCOUNT 
	end as CONSTITUENTCOUNT,
	case 
		when rir.RGCOUNT is null then 0
		else rir.RGCOUNT 
	end as RGCOUNT
  from RateIncreaseSegments ris
  left join RateIncreaseConstituentStats ric on 
				ris.SEGMENTNAME = ric.SEGMENTNAME
			and ris.SEGMENTDESC = ric.SEGMENTDESC
			and ris.SEGMENTCATEGORY = ric.SEGMENTCATEGORY
			and ris.PACKAGENAME = ric.PACKAGENAME
			and ris.RESPONSE = ric.RESPONSE
  left join RateIncreaseRevenueStats rir on 
				ris.SEGMENTNAME = rir.SEGMENTNAME
			and ris.SEGMENTDESC = rir.SEGMENTDESC
			and ris.SEGMENTCATEGORY = rir.SEGMENTCATEGORY
			and ris.PACKAGENAME = rir.PACKAGENAME
			and ris.RESPONSE = rir.RESPONSE
),
CountsWithSums as
(
select distinct 
	SEGMENT, 
	SEGMENTDESC,
	PACKAGETYPE,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'Yes - Increase') as YESINCREASE,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'Partial - Increase') as PARTIALINCREASE,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'No - Increase') as NOINCREASE,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'Never - Increase') as NEVERINCREASE,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'Partial - Reversal') as PARTIALREVERSAL,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'Reversal') as REVERSAL,
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC AND yc.RESPONSE = 'Did not respond') as DIDNOTRESPOND,	
	(select sum(CONSTITUENTCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC) as RECIPIENTCOUNT,
	(select sum(RGCOUNT) from Counts yc where c.SEGMENT = yc.SEGMENT and c.SEGMENTDESC = yc.SEGMENTDESC) as SPONSORSHIPSINCREASED
	
from Counts C
)
select 
	SEGMENT, 
	SEGMENTDESC,
	PACKAGETYPE,
	RECIPIENTCOUNT,
	YESINCREASE,
	cast ((cast(YESINCREASE as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as YESINCREASEPERCENTAGE,
	PARTIALINCREASE,
	cast ((cast(PARTIALINCREASE as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as PARTIALINCREASEPERCENTAGE,
	NOINCREASE,
	cast ((cast(NOINCREASE as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as NOINCREASEPERCENTAGE,
	NEVERINCREASE,
	cast ((cast(NEVERINCREASE as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as NEVERINCREASEPERCENTAGE,
	REVERSAL,
	cast ((cast(REVERSAL as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as REVERSALPERCENTAGE,
	PARTIALREVERSAL,
	cast ((cast(NEVERINCREASE as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as PARTIALREVERSALPERCENTAGE,
	DIDNOTRESPOND,
	cast ((cast(DIDNOTRESPOND as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3)) as DIDNOTRESPONDPERCENTAGE,
	case
		when upper(left (SEGMENT, 1)) in ('A', 'B') then YESINCREASE + PARTIALINCREASE + DIDNOTRESPOND
		when upper(left (SEGMENT, 1)) in ('C', 'D', 'E') then YESINCREASE + PARTIALINCREASE
		else 0
	end as RESULTSININCREASE,
	case
		when upper(left (SEGMENT, 1)) in ('A', 'B') then cast ((cast((YESINCREASE + PARTIALINCREASE + DIDNOTRESPOND) as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3))
		when upper(left (SEGMENT, 1)) in ('C', 'D', 'E') then cast ((cast((YESINCREASE + PARTIALINCREASE) as float) / cast(RECIPIENTCOUNT as float)) as decimal (5,3))
		else 0
	end as RESULTSININCREASEPERCENTAGE,	
	SPONSORSHIPSINCREASED
from CountsWithSums


			]]>
		</ViewSQL>
	</ViewImplementation>

	<!-- describe each field in the view output -->
	<Output>
		<OutputFields>
			<OutputField Name="SEGMENT" Caption="Segment" DataType="String" />
			<OutputField Name="SEGMENTDESC" Caption="Segment Description" DataType="String" />
			<OutputField Name="PACKAGETYPE" Caption="Package Type" DataType="String" />
			<OutputField Name="YESINCREASE" Caption="Yes - Increase response count" DataType="Integer" />
			<OutputField Name="YESINCREASEPERCENTAGE" Caption="Yes - Increase response percent" DataType="Decimal" />
			<OutputField Name="PARTIALINCREASE" Caption="Partial - Increase response count" DataType="Integer" />
			<OutputField Name="PARTIALINCREASEPERCENTAGE" Caption="Partial - Increase response percent" DataType="Decimal" />
			<OutputField Name="NOINCREASE" Caption="No - Increase response count" DataType="Integer" />
			<OutputField Name="NOINCREASEPERCENTAGE" Caption="No - Increase response percent" DataType="Decimal" />
			<OutputField Name="NEVERINCREASE" Caption="Never - Increase response count" DataType="Integer" />
			<OutputField Name="NEVERINCREASEPERCENTAGE" Caption="Never - Increase response percent" DataType="Decimal" />
			<OutputField Name="PARTIALREVERSAL" Caption="Partial - Reversal response count" DataType="Integer" />
			<OutputField Name="PARTIALREVERSALPERCENTAGE" Caption="Partial - Reversal response percent" DataType="Decimal" />
			<OutputField Name="REVERSAL" Caption="Reversal response count" DataType="Integer" />
			<OutputField Name="REVERSALPERCENTAGE" Caption="Reversal response percent" DataType="Decimal" />
			<OutputField Name="DIDNOTRESPOND" Caption="Did not respond count" DataType="Integer" />
			<OutputField Name="DIDNOTRESPONDPERCENTAGE" Caption="Did not respond percent" DataType="Decimal" />
			<OutputField Name="SPONSORSHIPSINCREASED" Caption="Sponsorships Increased" DataType="Integer" />
			<OutputField Name="RESULTSININCREASEPERCENTAGE" Caption="Results in Increase count" DataType="Integer" />
			<OutputField Name="YESINCREASEPERCENTAGE" Caption="Results in Increase percent" DataType="Decimal" />
		</OutputFields>
	</Output>

</QueryViewSpec>

